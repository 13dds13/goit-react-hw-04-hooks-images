{"version":3,"sources":["services/fetchImages.js","services/searchParams.js","services/smoothScroll.js","components/buttonShowMore/ButtonShowMore.js","components/imageGallery/imageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGallery.js","components/modal/Modal.js","components/searchbar/Searchbar.js","components/App.js","index.js"],"names":["fetchImages","dataForRequest","a","fetch","datafromAPI","ok","json","Error","searchParams","options","page","curPage","q","query","key","KEY","BASE_URL","searchOptions","URLSearchParams","smoothScroll","window","scrollTo","top","document","documentElement","scrollHeight","behavior","ButtonShowMore","onShowMoreBtn","isLoading","className","type","onClick","color","height","width","timeout","ImageGalleryItem","images","onImgClick","map","img","src","webformatURL","alt","tags","largeImageURL","ImageGallery","length","Modal","onModalClosing","imageURL","onKeyDownEsc","e","useEffect","addEventListener","removeEventListener","Searchbar","onSubmite","useState","setQuery","onSubmit","preventDefault","autoComplete","autoFocus","placeholder","value","onChange","target","imagesInit","initialData","queryInit","modalDataInit","isLoadingInit","pageInit","App","setImages","modalData","setModalData","setIsLoading","useRef","getImages","dataForFetch","prepareDataForRequest","loaderToggler","res","preparedImagesData","hits","id","addImagesToState","console","log","newImagesArr","current","prev","resetPageBeforeSubmit","constRequestData","increasePageNumber","imgForModal","currentTarget","code","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ac998e26.chunk.js","sourcesContent":["const fetchImages = async (dataForRequest) => {\r\n  const datafromAPI = await fetch(dataForRequest);\r\n  try {\r\n    if (datafromAPI.ok) {\r\n      return datafromAPI.json();\r\n    }\r\n    throw new Error(\"Ooops, something went wrong!\");\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport default fetchImages;\r\n","const searchParams = (options) => {\r\n  const {\r\n    curPage: page,\r\n    query: q,\r\n    KEY: key,\r\n    BASE_URL,\r\n    searchOptions,\r\n  } = options;\r\n  const searchParams = new URLSearchParams({\r\n    q,\r\n    page,\r\n    key,\r\n    ...searchOptions,\r\n  });\r\n\r\n  return `${BASE_URL}${searchParams}`;\r\n};\r\n\r\nexport default searchParams;\r\n","const smoothScroll = () => {\r\n  window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: \"smooth\",\r\n  });\r\n};\r\n\r\nexport default smoothScroll;\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ButtonShowMore = ({ onShowMoreBtn, isLoading }) => {\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={onShowMoreBtn}>\r\n      {isLoading ? (\r\n        <Loader\r\n          type=\"ThreeDots\"\r\n          color=\"#6186d6\"\r\n          height={200}\r\n          width={200}\r\n          timeout={3000}\r\n        />\r\n      ) : (\r\n        <p>Load more</p>\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nButtonShowMore.propTypes = {\r\n  onShowMoreBtn: PropTypes.func,\r\n  isLoading: PropTypes.bool,\r\n};\r\n\r\nexport default ButtonShowMore;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ images, onImgClick }) => {\r\n  return images.map((img) => (\r\n    <li key={img.webformatURL} className=\"ImageGalleryItem\">\r\n      <img\r\n        src={img.webformatURL}\r\n        alt={img.tags}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={() => onImgClick(img.largeImageURL)}\r\n      />\r\n    </li>\r\n  ));\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  onImgClick: PropTypes.func,\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      webformatURL: PropTypes.string,\r\n      tags: PropTypes.string,\r\n      id: PropTypes.number,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ButtonShowMore from \"../buttonShowMore/ButtonShowMore\";\r\nimport ImageGalleryItem from \"./imageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ images, onShowMoreBtn, onImgClick, isLoading }) => {\r\n  return (\r\n    !!images.length && (\r\n      <ul className=\"ImageGallery\">\r\n        <ImageGalleryItem images={images} onImgClick={onImgClick} />\r\n        <ButtonShowMore onShowMoreBtn={onShowMoreBtn} isLoading={isLoading} />\r\n      </ul>\r\n    )\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Modal = ({ onModalClosing, imageURL }) => {\r\n  const onKeyDownEsc = (e) => {\r\n    onModalClosing(e);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", onKeyDownEsc);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", onKeyDownEsc);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={onModalClosing}>\r\n      <div className=\"Modal\">\r\n        <img src={imageURL} alt=\"large\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  onModalClosing: PropTypes.func,\r\n  imageURL: PropTypes.string,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Searchbar = ({ onSubmite }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const handleChange = (e) => setQuery(e.target.value);\r\n\r\n  const handleSubmite = (e) => {\r\n    e.preventDefault();\r\n    onSubmite(query);\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmite}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={query}\r\n          onChange={handleChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  onSubmite: PropTypes.func,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React, { useState, useRef } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport initialData from \"../data/initialData.json\";\nimport constRequestData from \"../data/dataForRequest.json\";\nimport fetchImages from \"../services/fetchImages\";\nimport searchParams from \"../services/searchParams\";\nimport smoothScroll from \"../services/smoothScroll\";\nimport ImageGallery from \"./imageGallery/ImageGallery\";\nimport Modal from \"./modal/Modal\";\nimport Searchbar from \"./searchbar/Searchbar\";\n\nconst { imagesInit, queryInit, modalDataInit, isLoadingInit, pageInit } =\n  initialData;\n\nconst App = () => {\n  const [images, setImages] = useState(imagesInit);\n  const [query, setQuery] = useState(queryInit);\n  const [modalData, setModalData] = useState(modalDataInit);\n  const [isLoading, setIsLoading] = useState(isLoadingInit);\n  const page = useRef(pageInit);\n\n  const getImages = async (query) => {\n    const dataForFetch = prepareDataForRequest(query);\n\n    try {\n      loaderToggler();\n      const res = await fetchImages(dataForFetch);\n      const preparedImagesData = res.hits.map(\n        ({ id, webformatURL, largeImageURL, tags }) => ({\n          id,\n          webformatURL,\n          largeImageURL,\n          tags,\n        })\n      );\n      addImagesToState(preparedImagesData);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      smoothScroll();\n      loaderToggler();\n    }\n  };\n\n  const addImagesToState = (newImagesArr) => {\n    if (page.current === 1) {\n      setImages([...newImagesArr]);\n      return;\n    }\n    setImages((prev) => [...prev, ...newImagesArr]);\n  };\n\n  const onSubmite = (query) => {\n    resetPageBeforeSubmit();\n    setQuery(query);\n    getImages(query);\n  };\n\n  const onShowMoreBtn = () => {\n    increasePageNumber();\n    getImages(query);\n  };\n\n  const onImgClick = (imgForModal) => {\n    setModalData(imgForModal);\n  };\n\n  const onModalClosing = (e) => {\n    if (e.target === e.currentTarget || e.code === \"Escape\") {\n      setModalData(modalDataInit);\n    }\n  };\n\n  const resetPageBeforeSubmit = () => {\n    page.current = 1;\n  };\n\n  const prepareDataForRequest = (query) => {\n    const curPage = page.current;\n    const dataForRequest = { query, curPage, ...constRequestData };\n    return searchParams(dataForRequest);\n  };\n\n  const increasePageNumber = () => {\n    page.current += 1;\n  };\n\n  const loaderToggler = () => setIsLoading((prev) => !prev);\n\n  return (\n    <>\n      <Searchbar onSubmite={onSubmite} />\n      {isLoading && !images.length && (\n        <Loader\n          type=\"ThreeDots\"\n          color=\"#1539ad\"\n          height={100}\n          width={100}\n          timeout={3000}\n        />\n      )}\n      <ImageGallery\n        images={images}\n        onShowMoreBtn={onShowMoreBtn}\n        onImgClick={onImgClick}\n        isLoading={isLoading}\n      />\n      {modalData && (\n        <Modal imageURL={modalData} onModalClosing={onModalClosing} />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}