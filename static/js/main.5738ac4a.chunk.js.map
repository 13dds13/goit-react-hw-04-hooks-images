{"version":3,"sources":["services/fetchImages.js","services/searchParams.js","services/smoothScroll.js","components/buttonShowMore/ButtonShowMore.js","components/imageGallery/imageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGallery.js","components/modal/Modal.js","components/searchbar/Searchbar.js","components/App.js","index.js"],"names":["fetchImages","dataForRequest","a","fetch","datafromAPI","ok","json","Error","searchParams","options","page","q","query","key","KEY","BASE_URL","searchOptions","URLSearchParams","smoothScroll","window","scrollTo","top","document","documentElement","scrollHeight","behavior","ButtonShowMore","onShowMoreBtn","isLoading","className","type","onClick","color","height","width","timeout","ImageGalleryItem","images","onImgClick","map","img","src","webformatURL","alt","tags","largeImageURL","ImageGallery","length","Modal","onKeyDownEsc","e","props","onModalClosing","addEventListener","this","removeEventListener","imageURL","Component","Searchbar","state","handleChange","target","name","value","setState","handleSubmite","preventDefault","onSubmite","onSubmit","autoComplete","autoFocus","placeholder","onChange","App","modalData","getImages","prepareDataForRequest","dataForFetch","loaderStatusToggler","res","prepareedImagesData","hits","id","addImagesToState","console","log","newImagesArr","prev","resetPageBeforeSubmit","increasePageNumber","imgForModal","currentTarget","code","constRequestData","loaderStatus","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5738ac4a.chunk.js","sourcesContent":["const fetchImages = async (dataForRequest) => {\r\n  const datafromAPI = await fetch(dataForRequest);\r\n  try {\r\n    if (datafromAPI.ok) {\r\n      return datafromAPI.json();\r\n    }\r\n    throw new Error(\"Ooops, something went wrong!\");\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport default fetchImages;\r\n","const searchParams = (options) => {\r\n  const { page, query: q, KEY: key, BASE_URL, searchOptions } = options;\r\n  const searchParams = new URLSearchParams({\r\n    q,\r\n    page,\r\n    key,\r\n    ...searchOptions,\r\n  });\r\n\r\n  return `${BASE_URL}${searchParams}`;\r\n};\r\n\r\nexport default searchParams;\r\n","const smoothScroll = () => {\r\n  window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: \"smooth\",\r\n  });\r\n};\r\n\r\nexport default smoothScroll;\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ButtonShowMore = ({ onShowMoreBtn, isLoading }) => {\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={onShowMoreBtn}>\r\n      {isLoading ? (\r\n        <Loader\r\n          type=\"ThreeDots\"\r\n          color=\"#6186d6\"\r\n          height={200}\r\n          width={200}\r\n          timeout={5000}\r\n        />\r\n      ) : (\r\n        <p>Load more</p>\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nButtonShowMore.propTypes = {\r\n  onShowMoreBtn: PropTypes.func,\r\n  isLoading: PropTypes.bool,\r\n};\r\n\r\nexport default ButtonShowMore;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ images, onImgClick }) => {\r\n  return images.map((img) => (\r\n    <li key={img.webformatURL} className=\"ImageGalleryItem\">\r\n      <img\r\n        src={img.webformatURL}\r\n        alt={img.tags}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={() => onImgClick(img.largeImageURL)}\r\n      />\r\n    </li>\r\n  ));\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  onImgClick: PropTypes.func,\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      webformatURL: PropTypes.string,\r\n      tags: PropTypes.string,\r\n      id: PropTypes.number,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ButtonShowMore from \"../buttonShowMore/ButtonShowMore\";\r\nimport ImageGalleryItem from \"./imageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ images, onShowMoreBtn, onImgClick, isLoading }) => {\r\n  return (\r\n    !!images.length && (\r\n      <ul className=\"ImageGallery\">\r\n        <ImageGalleryItem images={images} onImgClick={onImgClick} />\r\n        <ButtonShowMore onShowMoreBtn={onShowMoreBtn} isLoading={isLoading} />\r\n      </ul>\r\n    )\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Modal extends Component {\r\n  onKeyDownEsc = (e) => {\r\n    this.props.onModalClosing(e);\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.onKeyDownEsc);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.onKeyDownEsc);\r\n  }\r\n\r\n  render() {\r\n    const { imageURL, onModalClosing } = this.props;\r\n    return (\r\n      <div className=\"Overlay\" onClick={onModalClosing}>\r\n        <div className=\"Modal\">\r\n          <img src={imageURL} alt=\"large\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onModalClosing: PropTypes.func,\r\n  imageURL: PropTypes.string,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    query: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmite = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmite(this.state.query);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmite}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            name=\"query\"\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmite: PropTypes.func,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport constRequestData from \"../data/dataForRequest.json\";\nimport fetchImages from \"../services/fetchImages\";\nimport searchParams from \"../services/searchParams\";\nimport smoothScroll from \"../services/smoothScroll\";\nimport ImageGallery from \"./imageGallery/ImageGallery\";\nimport Modal from \"./modal/Modal\";\nimport Searchbar from \"./searchbar/Searchbar\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    query: \"\",\n    page: 1,\n    modalData: \"\",\n    isLoading: false,\n  };\n\n  getImages = async () => {\n    const { query } = this.state;\n    const dataForFetch = await this.prepareDataForRequest(query);\n\n    try {\n      this.loaderStatusToggler();\n      const res = await fetchImages(dataForFetch);\n      const prepareedImagesData = res.hits.map(\n        ({ id, webformatURL, largeImageURL, tags }) => ({\n          id,\n          webformatURL,\n          largeImageURL,\n          tags,\n        })\n      );\n      this.addImagesToState(prepareedImagesData);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      smoothScroll();\n      this.loaderStatusToggler();\n    }\n  };\n\n  addImagesToState = (newImagesArr) => {\n    if (this.state.page === 1) {\n      this.setState({ images: [...newImagesArr] });\n      return;\n    }\n    this.setState((prev) => ({ images: [...prev.images, ...newImagesArr] }));\n  };\n\n  onSubmite = async (query) => {\n    await this.resetPageBeforeSubmit();\n    this.setState({ query });\n    this.getImages();\n  };\n\n  onShowMoreBtn = async () => {\n    const { query } = this.state;\n    await this.increasePageNumber();\n    this.getImages(query);\n  };\n\n  onImgClick = (imgForModal) => {\n    this.setState({ modalData: imgForModal });\n  };\n\n  onModalClosing = (e) => {\n    if (e.target === e.currentTarget || e.code === \"Escape\") {\n      this.setState({ modalData: \"\" });\n    }\n  };\n\n  resetPageBeforeSubmit = async () => {\n    this.setState({ page: 1 });\n  };\n\n  prepareDataForRequest = async (query) => {\n    const { page } = this.state;\n    const dataForRequest = { query, page, ...constRequestData };\n    return searchParams(dataForRequest);\n  };\n\n  increasePageNumber = async () => {\n    this.setState({ page: this.state.page + 1 });\n  };\n\n  loaderStatusToggler = () => {\n    const loaderStatus = this.state.isLoading;\n    this.setState({ isLoading: !loaderStatus });\n  };\n\n  render() {\n    const { images, isLoading, modalData } = this.state;\n    return (\n      <>\n        <Searchbar onSubmite={this.onSubmite} />\n        {isLoading && !images.length && (\n          <Loader\n            type=\"ThreeDots\"\n            color=\"#1539ad\"\n            height={100}\n            width={100}\n            timeout={5000}\n          />\n        )}\n        <ImageGallery\n          images={images}\n          onShowMoreBtn={this.onShowMoreBtn}\n          onImgClick={this.onImgClick}\n          isLoading={isLoading}\n        />\n        {modalData && (\n          <Modal imageURL={modalData} onModalClosing={this.onModalClosing} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}